'''
Банкет
а банкет были приглашены N Очень Важных Персон (ОВП). Были поставлены 2 стола.
Столы достаточно большие, чтобы все посетители банкета могли сесть за любой из них.
Проблема заключается в том, что некоторые ОВП не ладят друг с другом и не могут сидеть за одним столом.
Вас попросили определить, возможно ли всех ОВП рассадить за двумя столами.

Формат ввода
В первой строке входных данных содержатся два числа: N и M (1 <= N,M <= 100),
где N – количество ОВП, а M – количество пар ОВП, которые не могут сидеть за одним столом.
В следующих M строках записано по 2 числа – пары ОВП, которые не могут сидеть за одним столом.

Формат вывода
Если способ рассадить ОВП существует, то выведите YES в первой строке и номера ОВП,
которых необходимо посадить за первый стол, во второй строке. В противном случае в первой и единственной строке выведите NO.
'''

n, m = map(int, input().split())
graph = {i:[] for i in range(1, n + 1)}

for i in range(m):
    line = (list(map(int, input().split())))
    graph[line[0]].append(line[1])
    graph[line[1]].append(line[0])

color = [0] * n

def dfs (graph, color, pick):
    for i in graph[pick]:
        if color[i - 1] == 0:
            if color[pick - 1] == 1:
                color[i - 1] = 2
                dfs(graph, color, i)
            else:
                color[i - 1] = 1
                dfs(graph, color, i)
        elif color[i - 1] == color[pick - 1]:
            print("NO")
            exit(0)
    return color

for i in range(n):
    if color[i] == 0:
        color[i] = 1
        color = dfs (graph, color, i + 1)

print("YES")
for i in range (len(color)):
    if color[i] == 1:
        print(i + 1, end = " ")
